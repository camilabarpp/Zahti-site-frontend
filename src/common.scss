@use "sass:map";
@use "node_modules/@angular/material/index" as mat;
@use "color-palette";
@import "styles/button-custom";
@import "styles/toggle-button-custom";
@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@200;400;700&display=swap');


// Define a tipografia padrão do projeto
$zahti-typography: mat.define-typography-config(
  $font-family: "'Open Sans', sans-serif",
  $display-4: mat.define-typography-level(112px, 116px, 400, $letter-spacing: -0em),
  $display-3: mat.define-typography-level(56px, 60px, 400, $letter-spacing: -0em),
  $display-2: mat.define-typography-level(45px, 52px, 400, $letter-spacing: -0em),
  $display-1: mat.define-typography-level(34px, 40px, 400),
  $headline: mat.define-typography-level(32px, 40px, 700),
  $title: mat.define-typography-level(28px, 34px, 700),
  $subheading-1: mat.define-typography-level(22px, 34px, 400),
  $body-2: mat.define-typography-level(14px, 18px, 700),
  $body-1: mat.define-typography-level(16px, 18px, 400),
  $caption: mat.define-typography-level(14px, 18px, 400),
  $button: mat.define-typography-level(14px, 34px, 700),
);

// Adiciona uma nova cor ao tema - Success
$workshop-success: mat.define-palette(color-palette.$custom-success-color);

// Faz um "merge" da cor extra com o tema
@function apply-extra-colors($theme) {
  @return map.deep-merge($theme, (
    success: $workshop-success,
    color: (
      success: $workshop-success,
    )
  ));
}

// Mixin - um bloco de códigos CSS que serão executados sempre que chamado
@mixin create-theme($workshop-theme) {
  @include mat.all-component-themes($workshop-theme);
  @include theme($workshop-theme);
  @include mat.core($zahti-typography);
}
